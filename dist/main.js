(()=>{"use strict";let t=1.5*window.innerWidth,e=1.5*window.innerHeight,i=document.querySelector("canvas"),s=i.getContext("2d");function h(t,e){s.beginPath(),s.moveTo(t.x,t.y,t.z),s.lineTo(e.x,e.y,e.z),s.stroke()}function r(t,e,i){this.x=t,this.y=e,this.z=i}function n(t,e,i,s){this.center=new r(t,e,i),this.dist=s/2,this.vertices=[new r(this.center.x-this.dist,this.center.y-this.dist,this.center.z+this.dist),new r(this.center.x-this.dist,this.center.y-this.dist,this.center.z-this.dist),new r(this.center.x+this.dist,this.center.y-this.dist,this.center.z-this.dist),new r(this.center.x+this.dist,this.center.y-this.dist,this.center.z+this.dist),new r(this.center.x+this.dist,this.center.y+this.dist,this.center.z+this.dist),new r(this.center.x+this.dist,this.center.y+this.dist,this.center.z-this.dist),new r(this.center.x-this.dist,this.center.y+this.dist,this.center.z-this.dist),new r(this.center.x-this.dist,this.center.y+this.dist,this.center.z+this.dist)],this.faces=[[this.vertices[0],this.vertices[1],this.vertices[2],this.vertices[3]],[this.vertices[4],this.vertices[5],this.vertices[6],this.vertices[7]],[this.vertices[3],this.vertices[2],this.vertices[5],this.vertices[4]],[this.vertices[7],this.vertices[6],this.vertices[1],this.vertices[0]],[this.vertices[7],this.vertices[0],this.vertices[3],this.vertices[4]],[this.vertices[1],this.vertices[6],this.vertices[5],this.vertices[2]]]}i.width=t,i.height=e,s.setTransform(1,0,0,-1,t/2,e/2),s.globalCompositeOperation="lighter",s.fillRect(-t/2,-e/2,t,e),r.prototype.rotateZ=function(t,e){let i=Math.PI/180*t,s=this.x,h=this.y;this.x=(s-e.x)*Math.cos(i)-(h-e.y)*Math.sin(i)+e.x,this.y=(s-e.x)*Math.sin(i)+(h-e.y)*Math.cos(i)+e.y},r.prototype.rotateX=function(t,e){let i=Math.PI/180*t,s=this.y,h=this.z;this.y=(s-e.y)*Math.cos(i)-(h-e.z)*Math.sin(i)+e.y,this.z=(s-e.y)*Math.sin(i)+(h-e.z)*Math.cos(i)+e.z},r.prototype.rotateY=function(t,e){let i=Math.PI/180*t,s=this.x,h=this.z;this.x=(s-e.x)*Math.cos(i)+(h-e.z)*Math.sin(i)+e.x,this.z=-1*(s-e.x)*Math.sin(i)+(h-e.z)*Math.cos(i)+e.z},n.prototype.drawFrame=function(){if(!(this.center.z<-2e3))for(let t=0;t<this.faces.length;t++){for(let e=0;e<this.faces[t].length-1;e++)h(this.faces[t][e],this.faces[t][e+1]);h(this.faces[t][0],this.faces[t][this.faces[t].length-1])}},n.prototype.connectVerticesToOrigin=function(){for(let t=0;t<8;t++)h(this.vertices[t],this.center)},n.prototype.rotateZ=function(t){for(let e=0;e<this.vertices.length;e++)this.vertices[e].rotateZ(t,this.center)},n.prototype.rotateX=function(t){for(let e=0;e<this.vertices.length;e++)this.vertices[e].rotateX(t,this.center)},n.prototype.rotateY=function(t){for(let e=0;e<this.vertices.length;e++)this.vertices[e].rotateY(t,this.center)},n.prototype.rotate=function(t,e,i){0!=t&&this.rotateZ(t),0!=e&&this.rotateX(e),0!=i&&this.rotateY(i)},n.prototype.translate=function(t,e,i){this.center.x+=t,this.center.y+=e,this.center.z+=i;for(let s=0;s<this.vertices.length;s++)this.vertices[s].x+=t,this.vertices[s].y+=e,this.vertices[s].z+=i;0!=i&&this.scale(1-.001*i)},n.prototype.scale=function(t){for(let e=0;e<this.vertices.length;e++)this.scalePoint(this.vertices[e],this.center,t)},n.prototype.scalePoint=function(t,e,i){t.x=e.x+i*(t.x-e.x),t.y=e.y+i*(t.y-e.y),t.z=e.z+i*(t.z-e.z)};let o=[],c=[],a=[],d=[];function l(){let i=Math.random()*t*(2*(Math.random()-.5)),s=Math.random()*e*(2*(Math.random()-.5)),h=Math.random()*e*(2*(Math.random()-.5)),r=300*Math.random()+100,l="#"+Math.floor(16777215*Math.random()).toString(16),v=[5*Math.random()*(2*(Math.random()-.5)),5*Math.random()*(2*(Math.random()-.5)),5*Math.random()*(2*(Math.random()-.5))],y=[1.5*Math.random()*(2*(Math.random()-.5)),1.5*Math.random()*(2*(Math.random()-.5)),1.5*Math.random()*(2*(Math.random()-.5))],f=new n(i,s,h,r);o.push(f),c.push(v),a.push(y),d.push(l)}for(let t=0;t<45;t++)l();let v=!0;function y(){1==v&&setTimeout((()=>{requestAnimationFrame(y)}),1e3/60);for(let e=0;e<o.length;e++)2,t=d[e],.01,s.lineWidth=2,s.strokeStyle=t,s.globalAlpha=.01,o[e].connectVerticesToOrigin(),o[e].drawFrame(),o[e].translate(c[e][0],c[e][1],c[e][2]),o[e].rotate(a[e][0],a[e][1],a[e][2]);var t}function f(){v=!v,1==v&&y(),console.log("test")}window.addEventListener("click",f),window.addEventListener("touchstart",f),y()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,