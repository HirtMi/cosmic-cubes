(()=>{"use strict";let t=1.5*window.innerWidth,e=1.5*window.innerHeight,i=document.querySelector("canvas"),s=i.getContext("2d");function h(t,e){s.beginPath(),s.moveTo(t.x,t.y,t.z),s.lineTo(e.x,e.y,e.z),s.stroke()}function r(t,e,i){this.x=t,this.y=e,this.z=i}function n(t,e,i,s){this.center=new r(t,e,i),this.dist=s/2,this.vertices=[new r(this.center.x-this.dist,this.center.y-this.dist,this.center.z+this.dist),new r(this.center.x-this.dist,this.center.y-this.dist,this.center.z-this.dist),new r(this.center.x+this.dist,this.center.y-this.dist,this.center.z-this.dist),new r(this.center.x+this.dist,this.center.y-this.dist,this.center.z+this.dist),new r(this.center.x+this.dist,this.center.y+this.dist,this.center.z+this.dist),new r(this.center.x+this.dist,this.center.y+this.dist,this.center.z-this.dist),new r(this.center.x-this.dist,this.center.y+this.dist,this.center.z-this.dist),new r(this.center.x-this.dist,this.center.y+this.dist,this.center.z+this.dist)],this.faces=[[this.vertices[0],this.vertices[1],this.vertices[2],this.vertices[3]],[this.vertices[4],this.vertices[5],this.vertices[6],this.vertices[7]],[this.vertices[3],this.vertices[2],this.vertices[5],this.vertices[4]],[this.vertices[7],this.vertices[6],this.vertices[1],this.vertices[0]],[this.vertices[7],this.vertices[0],this.vertices[3],this.vertices[4]],[this.vertices[1],this.vertices[6],this.vertices[5],this.vertices[2]]]}i.width=t,i.height=e,s.setTransform(1,0,0,-1,t/2,e/2),s.globalCompositeOperation="lighter",s.fillRect(-t/2,-e/2,t,e),r.prototype.rotateZ=function(t,e){let i=Math.PI/180*t,s=this.x,h=this.y;this.x=(s-e.x)*Math.cos(i)-(h-e.y)*Math.sin(i)+e.x,this.y=(s-e.x)*Math.sin(i)+(h-e.y)*Math.cos(i)+e.y},r.prototype.rotateX=function(t,e){let i=Math.PI/180*t,s=this.y,h=this.z;this.y=(s-e.y)*Math.cos(i)-(h-e.z)*Math.sin(i)+e.y,this.z=(s-e.y)*Math.sin(i)+(h-e.z)*Math.cos(i)+e.z},r.prototype.rotateY=function(t,e){let i=Math.PI/180*t,s=this.x,h=this.z;this.x=(s-e.x)*Math.cos(i)+(h-e.z)*Math.sin(i)+e.x,this.z=-1*(s-e.x)*Math.sin(i)+(h-e.z)*Math.cos(i)+e.z},n.prototype.drawFrame=function(){if(!(this.center.z<-2e3))for(let t=0;t<this.faces.length;t++){for(let e=0;e<this.faces[t].length-1;e++)h(this.faces[t][e],this.faces[t][e+1]);h(this.faces[t][0],this.faces[t][this.faces[t].length-1])}},n.prototype.connectVerticesToOrigin=function(){for(let t=0;t<8;t++)h(this.vertices[t],this.center)},n.prototype.rotateZ=function(t){for(let e=0;e<this.vertices.length;e++)this.vertices[e].rotateZ(t,this.center)},n.prototype.rotateX=function(t){for(let e=0;e<this.vertices.length;e++)this.vertices[e].rotateX(t,this.center)},n.prototype.rotateY=function(t){for(let e=0;e<this.vertices.length;e++)this.vertices[e].rotateY(t,this.center)},n.prototype.rotate=function(t,e,i){0!=t&&this.rotateZ(t),0!=e&&this.rotateX(e),0!=i&&this.rotateY(i)},n.prototype.translate=function(t,e,i){this.center.x+=t,this.center.y+=e,this.center.z+=i;for(let s=0;s<this.vertices.length;s++)this.vertices[s].x+=t,this.vertices[s].y+=e,this.vertices[s].z+=i;0!=i&&this.scale(1-.001*i)},n.prototype.scale=function(t){for(let e=0;e<this.vertices.length;e++)this.scalePoint(this.vertices[e],this.center,t)},n.prototype.scalePoint=function(t,e,i){t.x=e.x+i*(t.x-e.x),t.y=e.y+i*(t.y-e.y),t.z=e.z+i*(t.z-e.z)};let c=[],o=[],a=[],d=[];function l(){let i=Math.random()*t*(2*(Math.random()-.5)),s=Math.random()*e*(2*(Math.random()-.5)),h=Math.random()*e*(2*(Math.random()-.5)),r=300*Math.random()+100,l="#"+Math.floor(16777215*Math.random()).toString(16),v=[5*Math.random()*(2*(Math.random()-.5)),5*Math.random()*(2*(Math.random()-.5)),5*Math.random()*(2*(Math.random()-.5))],y=[1.5*Math.random()*(2*(Math.random()-.5)),1.5*Math.random()*(2*(Math.random()-.5)),1.5*Math.random()*(2*(Math.random()-.5))],f=new n(i,s,h,r);c.push(f),o.push(v),a.push(y),d.push(l)}for(let t=0;t<45;t++)l();let v=!0;function y(){1==v&&setTimeout((()=>{requestAnimationFrame(y)}),1e3/60);for(let e=0;e<c.length;e++)2,t=d[e],.01,s.lineWidth=2,s.strokeStyle=t,s.globalAlpha=.01,c[e].connectVerticesToOrigin(),c[e].drawFrame(),c[e].translate(o[e][0],o[e][1],o[e][2]),c[e].rotate(a[e][0],a[e][1],a[e][2]);var t}window.addEventListener("click",(function(){v=!v,1==v&&y()})),y()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBQUEsSUFDSUEsRUFEUSxJQUNBQyxPQUFPQyxXQUNmQyxFQUZRLElBRUNGLE9BQU9HLFlBQ2hCQyxFQUFTQyxTQUFTQyxjQUFjLFVBQ2hDQyxFQUFNSCxFQUFPSSxXQUFXLE1BVTVCLFNBQVNDLEVBQWNDLEVBQUlDLEdBQ3ZCSixFQUFJSyxZQUNKTCxFQUFJTSxPQUFPSCxFQUFHSSxFQUFHSixFQUFHSyxFQUFHTCxFQUFHTSxHQUMxQlQsRUFBSVUsT0FBT04sRUFBR0csRUFBR0gsRUFBR0ksRUFBR0osRUFBR0ssR0FDMUJULEVBQUlXLFFBQ1IsQ0NoQkEsU0FBU0MsRUFBTUwsRUFBR0MsRUFBR0MsR0FDakJJLEtBQUtOLEVBQUlBLEVBQ1RNLEtBQUtMLEVBQUlBLEVBQ1RLLEtBQUtKLEVBQUlBLENBQ2IsQ0E4QkEsU0FBU0ssRUFBS1AsRUFBR0MsRUFBR0MsRUFBR00sR0FDbkJGLEtBQUtHLE9BQVMsSUFBSUosRUFBTUwsRUFBR0MsRUFBR0MsR0FDOUJJLEtBQUtJLEtBQU9GLEVBQU8sRUFFbkJGLEtBQUtLLFNBQVcsQ0FDWixJQUFJTixFQUFNQyxLQUFLRyxPQUFPVCxFQUFJTSxLQUFLSSxLQUFNSixLQUFLRyxPQUFPUixFQUFJSyxLQUFLSSxLQUFNSixLQUFLRyxPQUFPUCxFQUFJSSxLQUFLSSxNQUNyRixJQUFJTCxFQUFNQyxLQUFLRyxPQUFPVCxFQUFJTSxLQUFLSSxLQUFNSixLQUFLRyxPQUFPUixFQUFJSyxLQUFLSSxLQUFNSixLQUFLRyxPQUFPUCxFQUFJSSxLQUFLSSxNQUNyRixJQUFJTCxFQUFNQyxLQUFLRyxPQUFPVCxFQUFJTSxLQUFLSSxLQUFNSixLQUFLRyxPQUFPUixFQUFJSyxLQUFLSSxLQUFNSixLQUFLRyxPQUFPUCxFQUFJSSxLQUFLSSxNQUNyRixJQUFJTCxFQUFNQyxLQUFLRyxPQUFPVCxFQUFJTSxLQUFLSSxLQUFNSixLQUFLRyxPQUFPUixFQUFJSyxLQUFLSSxLQUFNSixLQUFLRyxPQUFPUCxFQUFJSSxLQUFLSSxNQUNyRixJQUFJTCxFQUFNQyxLQUFLRyxPQUFPVCxFQUFJTSxLQUFLSSxLQUFNSixLQUFLRyxPQUFPUixFQUFJSyxLQUFLSSxLQUFNSixLQUFLRyxPQUFPUCxFQUFJSSxLQUFLSSxNQUNyRixJQUFJTCxFQUFNQyxLQUFLRyxPQUFPVCxFQUFJTSxLQUFLSSxLQUFNSixLQUFLRyxPQUFPUixFQUFJSyxLQUFLSSxLQUFNSixLQUFLRyxPQUFPUCxFQUFJSSxLQUFLSSxNQUNyRixJQUFJTCxFQUFNQyxLQUFLRyxPQUFPVCxFQUFJTSxLQUFLSSxLQUFNSixLQUFLRyxPQUFPUixFQUFJSyxLQUFLSSxLQUFNSixLQUFLRyxPQUFPUCxFQUFJSSxLQUFLSSxNQUNyRixJQUFJTCxFQUFNQyxLQUFLRyxPQUFPVCxFQUFJTSxLQUFLSSxLQUFNSixLQUFLRyxPQUFPUixFQUFJSyxLQUFLSSxLQUFNSixLQUFLRyxPQUFPUCxFQUFJSSxLQUFLSSxPQUl6RkosS0FBS00sTUFBUSxDQUNULENBQUNOLEtBQUtLLFNBQVMsR0FBSUwsS0FBS0ssU0FBUyxHQUFJTCxLQUFLSyxTQUFTLEdBQUlMLEtBQUtLLFNBQVMsSUFDckUsQ0FBQ0wsS0FBS0ssU0FBUyxHQUFJTCxLQUFLSyxTQUFTLEdBQUlMLEtBQUtLLFNBQVMsR0FBSUwsS0FBS0ssU0FBUyxJQUNyRSxDQUFDTCxLQUFLSyxTQUFTLEdBQUlMLEtBQUtLLFNBQVMsR0FBSUwsS0FBS0ssU0FBUyxHQUFJTCxLQUFLSyxTQUFTLElBQ3JFLENBQUNMLEtBQUtLLFNBQVMsR0FBSUwsS0FBS0ssU0FBUyxHQUFJTCxLQUFLSyxTQUFTLEdBQUlMLEtBQUtLLFNBQVMsSUFDckUsQ0FBQ0wsS0FBS0ssU0FBUyxHQUFJTCxLQUFLSyxTQUFTLEdBQUlMLEtBQUtLLFNBQVMsR0FBSUwsS0FBS0ssU0FBUyxJQUNyRSxDQUFDTCxLQUFLSyxTQUFTLEdBQUlMLEtBQUtLLFNBQVMsR0FBSUwsS0FBS0ssU0FBUyxHQUFJTCxLQUFLSyxTQUFTLElBRTdFLENEdERBckIsRUFBT3VC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Q2hCLENBRUEsSUFBSyxJQUFJcEIsRUFBSSxFQUFHQSxFQTlCRSxHQThCYUEsSUFDM0JrQixJQUtKLElBQUlTLEdBQU8sRUFFWCxTQUFTQyxJQUNPLEdBQVJELEdBQ0FFLFlBQVcsS0FDUEMsc0JBQXNCRixFQUFRLEdBQy9CLElBUEMsSUFVUixJQUFLLElBQUk1QixFQUFJLEVBQUdBLEVBQUljLEVBQU1iLE9BQVFELElBQ3BCLEVGcENZb0IsRUVvQ1RILEVBQU9qQixHQUFJLElGbkM1QjVDLEVBQUkyRSxVRW1DVSxFRmxDZDNFLEVBQUk0RSxZQUFjWixFQUNsQmhFLEVBQUk2RSxZRWlDd0IsSUFDeEJuQixFQUFNZCxHQUFHRywwQkFDVFcsRUFBTWQsR0FBR0QsWUFDVGUsRUFBTWQsR0FBR00sVUFBVVMsRUFBYWYsR0FBRyxHQUFJZSxFQUFhZixHQUFHLEdBQUllLEVBQWFmLEdBQUcsSUFDM0VjLEVBQU1kLEdBQUdLLE9BQU9XLEVBQVVoQixHQUFHLEdBQUlnQixFQUFVaEIsR0FBRyxHQUFJZ0IsRUFBVWhCLEdBQUcsSUZ4Q3ZFLElBQThCb0IsQ0UwQzlCLENBR0F2RSxPQUFPcUYsaUJBQWlCLFNBQVMsV0FDN0JQLEdBQVFBLEVBQ0ksR0FBUkEsR0FBY0MsR0FDdEIsSUFHQUEsRyIsInNvdXJjZXMiOlsid2VicGFjazovL2Nvc21pYy1jdWJlcy8uL3NyYy9jYW52YXMuanMiLCJ3ZWJwYWNrOi8vY29zbWljLWN1YmVzLy4vc3JjL2dlb21ldHJ5LmpzIiwid2VicGFjazovL2Nvc21pYy1jdWJlcy8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgU0NBTEUgPSAxLjU7XG5sZXQgV0lEVEggPSB3aW5kb3cuaW5uZXJXaWR0aCAqIFNDQUxFO1xubGV0IEhFSUdIVCA9IHdpbmRvdy5pbm5lckhlaWdodCAqIFNDQUxFO1xubGV0IGNhbnZhcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2NhbnZhcycpO1xubGV0IGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpO1xuXG5cbmNhbnZhcy53aWR0aCA9IFdJRFRIO1xuY2FudmFzLmhlaWdodCA9IEhFSUdIVDtcbmN0eC5zZXRUcmFuc2Zvcm0oMSwgMCwgMCwgLTEsIFdJRFRIIC8gMiwgSEVJR0hUIC8gMik7XG5jdHguZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uID0gXCJsaWdodGVyXCI7XG5jdHguZmlsbFJlY3QoLVdJRFRIIC8gMiwgLUhFSUdIVCAvIDIsIFdJRFRILCBIRUlHSFQpO1xuXG5cbmZ1bmN0aW9uIGNvbm5lY3RQb2ludHMocDEsIHAyKXtcbiAgICBjdHguYmVnaW5QYXRoKCk7XG4gICAgY3R4Lm1vdmVUbyhwMS54LCBwMS55LCBwMS56KTtcbiAgICBjdHgubGluZVRvKHAyLngsIHAyLnksIHAyLnopO1xuICAgIGN0eC5zdHJva2UoKTtcbn1cblxuXG5mdW5jdGlvbiBzZXRTdHJva2UobGluZVdpZHRoLCBjb2xvciwgb3BhY2l0eSl7XG4gICAgY3R4LmxpbmVXaWR0aCA9IGxpbmVXaWR0aDtcbiAgICBjdHguc3Ryb2tlU3R5bGUgPSBjb2xvcjtcbiAgICBjdHguZ2xvYmFsQWxwaGEgPSBvcGFjaXR5O1xufVxuXG5cbmV4cG9ydCB7IGNvbm5lY3RQb2ludHMsIHNldFN0cm9rZSwgV0lEVEgsIEhFSUdIVCB9OyIsImltcG9ydCB7IGNvbm5lY3RQb2ludHMgfSBmcm9tICcuL2NhbnZhcy5qcyc7XG5cblxuZnVuY3Rpb24gUG9pbnQoeCwgeSwgeil7XG4gICAgdGhpcy54ID0geDtcbiAgICB0aGlzLnkgPSB5O1xuICAgIHRoaXMueiA9IHo7XG59XG5cblxuUG9pbnQucHJvdG90eXBlLnJvdGF0ZVogPSBmdW5jdGlvbihhbmdsZVosIGNlbnRlck9mUm90YXRpb24pe1xuICAgIGxldCByYWRzWiA9IChNYXRoLlBJIC8gMTgwKSAqIGFuZ2xlWjtcbiAgICBsZXQgcHggPSB0aGlzLng7XG4gICAgbGV0IHB5ID0gdGhpcy55O1xuICAgIHRoaXMueCA9ICgocHggLSBjZW50ZXJPZlJvdGF0aW9uLngpICogTWF0aC5jb3MocmFkc1opIC0gKHB5IC0gY2VudGVyT2ZSb3RhdGlvbi55KSAqIE1hdGguc2luKHJhZHNaKSkgKyBjZW50ZXJPZlJvdGF0aW9uLng7XG4gICAgdGhpcy55ID0gKChweCAtIGNlbnRlck9mUm90YXRpb24ueCkgKiBNYXRoLnNpbihyYWRzWikgKyAocHkgLSBjZW50ZXJPZlJvdGF0aW9uLnkpICogTWF0aC5jb3MocmFkc1opKSArIGNlbnRlck9mUm90YXRpb24ueTtcbn1cblxuXG5Qb2ludC5wcm90b3R5cGUucm90YXRlWCA9IGZ1bmN0aW9uKGFuZ2xlWCwgY2VudGVyT2ZSb3RhdGlvbil7XG4gICAgbGV0IHJhZHNYID0gKE1hdGguUEkgLyAxODApICogYW5nbGVYO1xuICAgIGxldCBweSA9IHRoaXMueTtcbiAgICBsZXQgcHogPSB0aGlzLno7XG4gICAgdGhpcy55ID0gKChweSAtIGNlbnRlck9mUm90YXRpb24ueSkgKiBNYXRoLmNvcyhyYWRzWCkgLSAocHogLSBjZW50ZXJPZlJvdGF0aW9uLnopICogTWF0aC5zaW4ocmFkc1gpKSArIGNlbnRlck9mUm90YXRpb24ueTtcbiAgICB0aGlzLnogPSAoKHB5IC0gY2VudGVyT2ZSb3RhdGlvbi55KSAqIE1hdGguc2luKHJhZHNYKSArIChweiAtIGNlbnRlck9mUm90YXRpb24ueikgKiBNYXRoLmNvcyhyYWRzWCkpICsgY2VudGVyT2ZSb3RhdGlvbi56O1xufVxuXG5cblBvaW50LnByb3RvdHlwZS5yb3RhdGVZID0gZnVuY3Rpb24oYW5nbGVZLCBjZW50ZXJPZlJvdGF0aW9uKXtcbiAgICBsZXQgcmFkc1kgPSAoTWF0aC5QSSAvIDE4MCkgKiBhbmdsZVk7XG4gICAgbGV0IHB4ID0gdGhpcy54O1xuICAgIGxldCBweiA9IHRoaXMuejtcbiAgICB0aGlzLnggPSAoKHB4IC0gY2VudGVyT2ZSb3RhdGlvbi54KSAqIE1hdGguY29zKHJhZHNZKSArIChweiAtIGNlbnRlck9mUm90YXRpb24ueikgKiBNYXRoLnNpbihyYWRzWSkpICsgY2VudGVyT2ZSb3RhdGlvbi54O1xuICAgIHRoaXMueiA9ICgtMSAqIChweCAtIGNlbnRlck9mUm90YXRpb24ueCkgKiBNYXRoLnNpbihyYWRzWSkgKyAocHogLSBjZW50ZXJPZlJvdGF0aW9uLnopICogTWF0aC5jb3MocmFkc1kpKSArIGNlbnRlck9mUm90YXRpb24uejtcbn0gICAgICAgICAgIFxuXG5cbmZ1bmN0aW9uIEN1YmUoeCwgeSwgeiwgc2l6ZSl7XG4gICAgdGhpcy5jZW50ZXIgPSBuZXcgUG9pbnQoeCwgeSwgeik7XG4gICAgdGhpcy5kaXN0ID0gc2l6ZSAvIDI7XG4gICAgXG4gICAgdGhpcy52ZXJ0aWNlcyA9IFtcbiAgICAgICAgbmV3IFBvaW50KHRoaXMuY2VudGVyLnggLSB0aGlzLmRpc3QsIHRoaXMuY2VudGVyLnkgLSB0aGlzLmRpc3QsIHRoaXMuY2VudGVyLnogKyB0aGlzLmRpc3QpLFxuICAgICAgICBuZXcgUG9pbnQodGhpcy5jZW50ZXIueCAtIHRoaXMuZGlzdCwgdGhpcy5jZW50ZXIueSAtIHRoaXMuZGlzdCwgdGhpcy5jZW50ZXIueiAtIHRoaXMuZGlzdCksXG4gICAgICAgIG5ldyBQb2ludCh0aGlzLmNlbnRlci54ICsgdGhpcy5kaXN0LCB0aGlzLmNlbnRlci55IC0gdGhpcy5kaXN0LCB0aGlzLmNlbnRlci56IC0gdGhpcy5kaXN0KSxcbiAgICAgICAgbmV3IFBvaW50KHRoaXMuY2VudGVyLnggKyB0aGlzLmRpc3QsIHRoaXMuY2VudGVyLnkgLSB0aGlzLmRpc3QsIHRoaXMuY2VudGVyLnogKyB0aGlzLmRpc3QpLFxuICAgICAgICBuZXcgUG9pbnQodGhpcy5jZW50ZXIueCArIHRoaXMuZGlzdCwgdGhpcy5jZW50ZXIueSArIHRoaXMuZGlzdCwgdGhpcy5jZW50ZXIueiArIHRoaXMuZGlzdCksXG4gICAgICAgIG5ldyBQb2ludCh0aGlzLmNlbnRlci54ICsgdGhpcy5kaXN0LCB0aGlzLmNlbnRlci55ICsgdGhpcy5kaXN0LCB0aGlzLmNlbnRlci56IC0gdGhpcy5kaXN0KSxcbiAgICAgICAgbmV3IFBvaW50KHRoaXMuY2VudGVyLnggLSB0aGlzLmRpc3QsIHRoaXMuY2VudGVyLnkgKyB0aGlzLmRpc3QsIHRoaXMuY2VudGVyLnogLSB0aGlzLmRpc3QpLFxuICAgICAgICBuZXcgUG9pbnQodGhpcy5jZW50ZXIueCAtIHRoaXMuZGlzdCwgdGhpcy5jZW50ZXIueSArIHRoaXMuZGlzdCwgdGhpcy5jZW50ZXIueiArIHRoaXMuZGlzdClcbiAgICBdO1xuXG4gICAgXG4gICAgdGhpcy5mYWNlcyA9IFtcbiAgICAgICAgW3RoaXMudmVydGljZXNbMF0sIHRoaXMudmVydGljZXNbMV0sIHRoaXMudmVydGljZXNbMl0sIHRoaXMudmVydGljZXNbM11dLFxuICAgICAgICBbdGhpcy52ZXJ0aWNlc1s0XSwgdGhpcy52ZXJ0aWNlc1s1XSwgdGhpcy52ZXJ0aWNlc1s2XSwgdGhpcy52ZXJ0aWNlc1s3XV0sXG4gICAgICAgIFt0aGlzLnZlcnRpY2VzWzNdLCB0aGlzLnZlcnRpY2VzWzJdLCB0aGlzLnZlcnRpY2VzWzVdLCB0aGlzLnZlcnRpY2VzWzRdXSxcbiAgICAgICAgW3RoaXMudmVydGljZXNbN10sIHRoaXMudmVydGljZXNbNl0sIHRoaXMudmVydGljZXNbMV0sIHRoaXMudmVydGljZXNbMF1dLFxuICAgICAgICBbdGhpcy52ZXJ0aWNlc1s3XSwgdGhpcy52ZXJ0aWNlc1swXSwgdGhpcy52ZXJ0aWNlc1szXSwgdGhpcy52ZXJ0aWNlc1s0XV0sXG4gICAgICAgIFt0aGlzLnZlcnRpY2VzWzFdLCB0aGlzLnZlcnRpY2VzWzZdLCB0aGlzLnZlcnRpY2VzWzVdLCB0aGlzLnZlcnRpY2VzWzJdXVxuICAgIF07XG59XG5cblxuQ3ViZS5wcm90b3R5cGUuZHJhd0ZyYW1lID0gZnVuY3Rpb24oKXtcbiAgICBpZiAodGhpcy5jZW50ZXIueiA8IC0yMDAwKXtyZXR1cm47fVxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5mYWNlcy5sZW5ndGg7IGkrKyl7XG4gICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgdGhpcy5mYWNlc1tpXS5sZW5ndGggLSAxOyBqKyspe1xuICAgICAgICAgICAgY29ubmVjdFBvaW50cyh0aGlzLmZhY2VzW2ldW2pdLCB0aGlzLmZhY2VzW2ldW2orMV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICBjb25uZWN0UG9pbnRzKHRoaXMuZmFjZXNbaV1bMF0sIHRoaXMuZmFjZXNbaV1bdGhpcy5mYWNlc1tpXS5sZW5ndGggLSAxXSk7XG4gICAgfVxufVxuXG5cbkN1YmUucHJvdG90eXBlLmNvbm5lY3RWZXJ0aWNlc1RvT3JpZ2luID0gZnVuY3Rpb24oKXtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDg7IGkrKyl7XG4gICAgICAgIGNvbm5lY3RQb2ludHModGhpcy52ZXJ0aWNlc1tpXSwgdGhpcy5jZW50ZXIpO1xuICAgIH1cbn1cblxuXG5DdWJlLnByb3RvdHlwZS5yb3RhdGVaID0gZnVuY3Rpb24oYW5nbGUpe1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy52ZXJ0aWNlcy5sZW5ndGg7IGkrKyl7XG4gICAgICAgIHRoaXMudmVydGljZXNbaV0ucm90YXRlWihhbmdsZSwgdGhpcy5jZW50ZXIpO1xuICAgIH1cbn1cblxuXG5DdWJlLnByb3RvdHlwZS5yb3RhdGVYID0gZnVuY3Rpb24oYW5nbGUpe1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy52ZXJ0aWNlcy5sZW5ndGg7IGkrKyl7XG4gICAgICAgIHRoaXMudmVydGljZXNbaV0ucm90YXRlWChhbmdsZSwgdGhpcy5jZW50ZXIpO1xuICAgIH1cbn1cblxuQ3ViZS5wcm90b3R5cGUucm90YXRlWSA9IGZ1bmN0aW9uKGFuZ2xlKXtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMudmVydGljZXMubGVuZ3RoOyBpKyspe1xuICAgICAgICB0aGlzLnZlcnRpY2VzW2ldLnJvdGF0ZVkoYW5nbGUsIHRoaXMuY2VudGVyKTtcbiAgICB9XG59XG5cblxuQ3ViZS5wcm90b3R5cGUucm90YXRlID0gZnVuY3Rpb24oYW5nbGVaLCBhbmdsZVgsIGFuZ2xlWSl7XG4gICAgaWYgKGFuZ2xlWiAhPSAwKXt0aGlzLnJvdGF0ZVooYW5nbGVaKTt9XG4gICAgaWYgKGFuZ2xlWCAhPSAwKXt0aGlzLnJvdGF0ZVgoYW5nbGVYKTt9XG4gICAgaWYgKGFuZ2xlWSAhPSAwKXt0aGlzLnJvdGF0ZVkoYW5nbGVZKTt9XG59XG5cblxuQ3ViZS5wcm90b3R5cGUudHJhbnNsYXRlID0gZnVuY3Rpb24oZHgsIGR5LCBkeil7XG4gICAgdGhpcy5jZW50ZXIueCArPSBkeDtcbiAgICB0aGlzLmNlbnRlci55ICs9IGR5O1xuICAgIHRoaXMuY2VudGVyLnogKz0gZHo7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnZlcnRpY2VzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgdGhpcy52ZXJ0aWNlc1tpXS54ICs9IGR4O1xuICAgICAgICB0aGlzLnZlcnRpY2VzW2ldLnkgKz0gZHk7XG4gICAgICAgIHRoaXMudmVydGljZXNbaV0ueiArPSBkejtcbiAgICB9XG4gICAgaWYgKGR6ICE9IDApe1xuICAgICAgICB0aGlzLnNjYWxlKDEgLSAoLjAwMSAqIGR6KSk7XG4gICAgfVxufVxuXG5cbkN1YmUucHJvdG90eXBlLnNjYWxlID0gZnVuY3Rpb24oc2NhbGFyKXtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMudmVydGljZXMubGVuZ3RoOyBpKyspe1xuICAgICAgICB0aGlzLnNjYWxlUG9pbnQodGhpcy52ZXJ0aWNlc1tpXSwgdGhpcy5jZW50ZXIsIHNjYWxhcilcbiAgICB9XG59XG5cblxuQ3ViZS5wcm90b3R5cGUuc2NhbGVQb2ludCA9IGZ1bmN0aW9uKHBvaW50LCBjZW50ZXIsIHNjYWxhcil7XG4gICAgcG9pbnQueCA9IGNlbnRlci54ICsgc2NhbGFyICogKHBvaW50LnggLSBjZW50ZXIueCk7XG4gICAgcG9pbnQueSA9IGNlbnRlci55ICsgc2NhbGFyICogKHBvaW50LnkgLSBjZW50ZXIueSk7XG4gICAgcG9pbnQueiA9IGNlbnRlci56ICsgc2NhbGFyICogKHBvaW50LnogLSBjZW50ZXIueik7XG59XG5cblxuZnVuY3Rpb24gcmFuZG9tQ29sb3IoKXtcbiAgICByZXR1cm4gXCIjXCIgKyBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqMTY3NzcyMTUpLnRvU3RyaW5nKDE2KTtcbn1cblxuXG5leHBvcnQgeyBDdWJlLCByYW5kb21Db2xvciB9OyIsImltcG9ydCB7IEN1YmUsIHJhbmRvbUNvbG9yIH0gZnJvbSAnLi9nZW9tZXRyeS5qcyc7XG5pbXBvcnQgeyBzZXRTdHJva2UsIFdJRFRILCBIRUlHSFQgfSBmcm9tICcuL2NhbnZhcy5qcyc7XG5cblxubGV0IGN1YmVzID0gW107XG5sZXQgdHJhbnNsYXRpb25zID0gW107XG5sZXQgcm90YXRpb25zID0gW107XG5sZXQgY29sb3JzID0gW107XG5jb25zdCBST1RBVElPTl9TUEVFRCA9IDEuNTtcbmNvbnN0IFRSQU5TTEFUSU9OX1NQRUVEID0gNTtcbmNvbnN0IE1BWF9TSVpFID0gNDAwO1xuY29uc3QgTUlOX1NJWkUgPSAxMDA7XG5jb25zdCBOVU1fQ1VCRVMgPSA0NTtcblxuXG5mdW5jdGlvbiBnZW5lcmF0ZVJhbmRvbUN1YmUoKXtcbiAgICBsZXQgeCA9IE1hdGgucmFuZG9tKCkgKiBXSURUSCAqICgoTWF0aC5yYW5kb20oKSAtIDAuNSkgKiAyKTtcbiAgICBsZXQgeSA9IE1hdGgucmFuZG9tKCkgKiBIRUlHSFQgKiAoKE1hdGgucmFuZG9tKCkgLSAwLjUpICogMik7XG4gICAgbGV0IHogPSBNYXRoLnJhbmRvbSgpICogSEVJR0hUICogKChNYXRoLnJhbmRvbSgpIC0gMC41KSAqIDIpO1xuICAgIGxldCBzaXplID0gTWF0aC5yYW5kb20oKSAqIChNQVhfU0laRSAtIE1JTl9TSVpFKSArIE1JTl9TSVpFO1xuICAgIGxldCBjb2xvciA9IHJhbmRvbUNvbG9yKCk7XG5cbiAgICBsZXQgdHJhbnNsYXRpb24gPSBbXG4gICAgICAgICBNYXRoLnJhbmRvbSgpICogVFJBTlNMQVRJT05fU1BFRUQgKiAoKE1hdGgucmFuZG9tKCkgLSAwLjUpICogMiksXG4gICAgICAgICBNYXRoLnJhbmRvbSgpICogVFJBTlNMQVRJT05fU1BFRUQgKiAoKE1hdGgucmFuZG9tKCkgLSAwLjUpICogMiksIFxuICAgICAgICAgTWF0aC5yYW5kb20oKSAqIFRSQU5TTEFUSU9OX1NQRUVEICogKChNYXRoLnJhbmRvbSgpIC0gMC41KSAqIDIpXG4gICAgICAgIF07XG5cbiAgICBsZXQgcm90YXRpb24gPSBbXG4gICAgICAgICBNYXRoLnJhbmRvbSgpICogUk9UQVRJT05fU1BFRUQgKiAoKE1hdGgucmFuZG9tKCkgLSAwLjUpICogMiksXG4gICAgICAgICBNYXRoLnJhbmRvbSgpICogUk9UQVRJT05fU1BFRUQgKiAoKE1hdGgucmFuZG9tKCkgLSAwLjUpICogMiksIFxuICAgICAgICAgTWF0aC5yYW5kb20oKSAqIFJPVEFUSU9OX1NQRUVEICogKChNYXRoLnJhbmRvbSgpIC0gMC41KSAqIDIpXG4gICAgICAgIF07XG5cbiAgICBsZXQgY3ViZSA9IG5ldyBDdWJlKHgsIHksIHosIHNpemUpO1xuXG4gICAgY3ViZXMucHVzaChjdWJlKTtcbiAgICB0cmFuc2xhdGlvbnMucHVzaCh0cmFuc2xhdGlvbik7XG4gICAgcm90YXRpb25zLnB1c2gocm90YXRpb24pO1xuICAgIGNvbG9ycy5wdXNoKGNvbG9yKTtcbn1cblxuZm9yIChsZXQgaSA9IDA7IGkgPCBOVU1fQ1VCRVM7IGkrKyl7XG4gICAgZ2VuZXJhdGVSYW5kb21DdWJlKCk7XG59XG5cblxuY29uc3QgZnBzID0gNjA7XG5sZXQgUExBWSA9IHRydWU7XG5cbmZ1bmN0aW9uIGFuaW1hdGUoKXtcbiAgICBpZiAoUExBWSA9PSB0cnVlKXtcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoYW5pbWF0ZSk7XG4gICAgICAgIH0sIDEwMDAgLyBmcHMpO1xuICAgIH1cblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY3ViZXMubGVuZ3RoOyBpKyspe1xuICAgICAgICBzZXRTdHJva2UoMiwgY29sb3JzW2ldLCAuMDEpO1xuICAgICAgICBjdWJlc1tpXS5jb25uZWN0VmVydGljZXNUb09yaWdpbigpO1xuICAgICAgICBjdWJlc1tpXS5kcmF3RnJhbWUoKTtcbiAgICAgICAgY3ViZXNbaV0udHJhbnNsYXRlKHRyYW5zbGF0aW9uc1tpXVswXSwgdHJhbnNsYXRpb25zW2ldWzFdLCB0cmFuc2xhdGlvbnNbaV1bMl0pO1xuICAgICAgICBjdWJlc1tpXS5yb3RhdGUocm90YXRpb25zW2ldWzBdLCByb3RhdGlvbnNbaV1bMV0sIHJvdGF0aW9uc1tpXVsyXSk7XG4gICAgfVxufVxuXG5cbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24oKXtcbiAgICBQTEFZID0gIVBMQVk7XG4gICAgaWYgKFBMQVkgPT0gdHJ1ZSl7YW5pbWF0ZSgpfTtcbn0pXG5cblxuYW5pbWF0ZSgpOyJdLCJuYW1lcyI6WyJXSURUSCIsIndpbmRvdyIsImlubmVyV2lkdGgiLCJIRUlHSFQiLCJpbm5lckhlaWdodCIsImNhbnZhcyIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImN0eCIsImdldENvbnRleHQiLCJjb25uZWN0UG9pbnRzIiwicDEiLCJwMiIsImJlZ2luUGF0aCIsIm1vdmVUbyIsIngiLCJ5IiwieiIsImxpbmVUbyIsInN0cm9rZSIsIlBvaW50IiwidGhpcyIsIkN1YmUiLCJzaXplIiwiY2VudGVyIiwiZGlzdCIsInZlcnRpY2VzIiwiZmFjZXMiLCJ3aWR0aCIsImhlaWdodCIsInNldFRyYW5zZm9ybSIsImdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbiIsImZpbGxSZWN0IiwicHJvdG90eXBlIiwicm90YXRlWiIsImFuZ2xlWiIsImNlbnRlck9mUm90YXRpb24iLCJyYWRzWiIsIk1hdGgiLCJQSSIsInB4IiwicHkiLCJjb3MiLCJzaW4iLCJyb3RhdGVYIiwiYW5nbGVYIiwicmFkc1giLCJweiIsInJvdGF0ZVkiLCJhbmdsZVkiLCJyYWRzWSIsImRyYXdGcmFtZSIsImkiLCJsZW5ndGgiLCJqIiwiY29ubmVjdFZlcnRpY2VzVG9PcmlnaW4iLCJhbmdsZSIsInJvdGF0ZSIsInRyYW5zbGF0ZSIsImR4IiwiZHkiLCJkeiIsInNjYWxlIiwic2NhbGFyIiwic2NhbGVQb2ludCIsInBvaW50IiwiY3ViZXMiLCJ0cmFuc2xhdGlvbnMiLCJyb3RhdGlvbnMiLCJjb2xvcnMiLCJnZW5lcmF0ZVJhbmRvbUN1YmUiLCJyYW5kb20iLCJjb2xvciIsImZsb29yIiwidG9TdHJpbmciLCJ0cmFuc2xhdGlvbiIsInJvdGF0aW9uIiwiY3ViZSIsInB1c2giLCJQTEFZIiwiYW5pbWF0ZSIsInNldFRpbWVvdXQiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJsaW5lV2lkdGgiLCJzdHJva2VTdHlsZSIsImdsb2JhbEFscGhhIiwiYWRkRXZlbnRMaXN0ZW5lciJdLCJzb3VyY2VSb290IjoiIn0=